### CVE Checker (for Oracle)
#
# - CVE number
# - Current package version
# URL https://linux.oracle.com/cve/CVE-2024-41091.html
# Provide link for Errata

import requests
import re
from bs4 import BeautifulSoup
import platform
import os
import sys
import rpm

# Set/get variables
cve_number = input("What is the CVE number? ex. CVE-2024-41091:")
response = requests.get("https://linux.oracle.com/cve/" + cve_number + ".html")
os_version = "Oracle Linux version 9"
text = response.text
print(platform.version())

# Parse HTML
soup = BeautifulSoup(text, 'html.parser')

# Find all relevant rows
rows = soup.find_all('tr')
errata_url_array = []

for row in rows:
    platform = row.find('td')
    errata = row.find('a', href=True)
    if platform and errata:
        platform_text = platform.get_text(strip=True)
        url = errata['href']
        if os_version in platform_text:
            content = re.search(r'\((.*?)\)', platform_text)
            if content:
                errata_url_array.append(url)
                print("Content inside parentheses:", content.group(1))
                print("URL:", url)
                print("---")


#print(errata_url_array)
oracle_linux_9_rpms = []
def find_rpms_from_errata():
    for url in errata_url_array:
        errata_response = requests.get(url)
        soup = BeautifulSoup(errata_response.text, 'html.parser')
        rows = soup.find_all('tr')
        in_oracle_linux_9_section = False
        # Iterate over rows to find Oracle Linux 9 RPMs
        for row in rows:
            # Check if the row contains "Oracle Linux 9"
            header = row.find('td')
            if header and "Oracle Linux 9" in header.get_text():
                in_oracle_linux_9_section = True
            elif header and "Oracle Linux 8" in header.get_text():
                in_oracle_linux_9_section = False
            else:
                in_oracle_linux_9_section = False
    
            # If in Oracle Linux 9 section, look for RPMs
            if in_oracle_linux_9_section:
                cells = row.find_all('td')
                if len(cells) > 1:
                    rpm_name = cells[1].get_text(strip=True)
                    if rpm_name:  # Check if there's an RPM name in the cell
                        oracle_linux_9_rpms.append(rpm_name)
            # Print out the RPMs for Oracle Linux 9
            #for rpm in oracle_linux_9_rpms:
                #print(rpm)

find_rpms_from_errata()

#regex ex. r'^(?P<name>[^-]+)-(?P<version>[0-9\.]+)-(?P<release>[0-9a-zA-Z\._]+)\.(?P<arch>[a-z0-9_]+)\.rpm$|^(?P<name_src>[^-]+)-(?P<version_src>[0-9\.]+)-(?P<release_src>[0-9a-zA-Z\._]+)\.(?P<arch_src>src)\.rpm$'
def match_packages_to_os():
    rpm_regex = re.compile(r'^(?P<name>[^-]+)-(?P<version>[0-9\.]+)-(?P<release>[0-9a-zA-Z\._]+)(?:\.(?P<arch>[a-z0-9_]+))?\.rpm$|^(?P<name_src>[^-]+)-(?P<version_src>[0-9\.]+)-(?P<release_src>[0-9a-zA-Z\._]+)\.src\.rpm$')
    for package in oracle_linux_9_rpms:
        match = rpm_regex.match(package)
        if match:
            package_name = match.group('name')
            version = match.group('version')
            release = match.group('release')
        else:
            print('Bad RPM filename format', package)
        rpm = package_name
        f = os.popen('rpm -qa')
        arq = f.readlines()
        for r in arq:
            if rpm in r:
                print("{} is installed".format(r.rstrip()))

match_packages_to_os()
